knitr::opts_chunk$set(echo = TRUE)
library(Seurat)
library(tidyverse)
ggplot(pca_data, aes(PC_1, PC_2))+
geom_point()
library(Seurat)
library(tidyverse)
read10x_data <- Read10X("/project/obds/shared/resources/4_r_single_cell/singlecell_seuratday1/filtered_feature_bc_matrix"
)
class(read10x_data)
dim(read10x_data)
read10x_data[1:15, 1:6]
head(read10x_data)
seurat_object <- CreateSeuratObject(read10x_data,
project = "pbmc5k",
min.cells = 3,
min.features = 200
)
seurat_object
dim(read10x_data) - dim(seurat_object )
DefaultAssay(seurat_object)
Assays(seurat_object)
GetAssay(seurat_object, assay = "RNA", slot = "data")
#if seurat object is used - counts, data, scale.data, key, var.features, meta.features
seurat_object@assays$RNA@data[1:6, 1:6]
GetAssayData(object = seurat_object)[1:6, 1:6]
seurat_object[[]][1:6, ]
head(seurat_object[["nFeature_RNA"]])
class(head(seurat_object[["nFeature_RNA"]]))
head(seurat_object$nCount_RNA)
class(head(seurat_object$nCount_RNA))
FetchData(seurat_object, vars = c("nCount_RNA", "LYZ"), slot = "data")[1:6, ]
class(FetchData(seurat_object, vars = c("nCount_RNA", "LYZ"))[1:6, ])
WhichCells(seurat_object, expression = LYZ > 500)
VariableFeatures(seurat_object)
subset(
x = seurat_object,
cells = WhichCells(seurat_object, expression = LYZ > 500),
features = VariableFeatures(object = seurat_object)
)
VlnPlot(seurat_object, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
seurat_object[["percent.mt"]] <- PercentageFeatureSet(seurat_object, pattern = "^MT-")
VlnPlot(seurat_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
?FeatureScatter
FeatureScatter(seurat_object, feature1 = "percent.mt", feature2 = "nCount_RNA")
?subset
seurat_after_qc <- subset(seurat_object,
subset = nCount_RNA > 4500 & percent.mt < 15 & nFeature_RNA > 1500
)
seurat_after_qc
dim(seurat_object) - dim(seurat_after_qc )
seurat_after_qc <- NormalizeData(
object = seurat_after_qc,
normalization.method = "LogNormalize"
)
#counts are before normalization
ggplot_lyz_raw <- ggplot(FetchData(seurat_after_qc, vars = "LYZ", slot = "counts"), aes(LYZ)) +
geom_histogram(fill = "grey", color = "black", bins = 100) +
coord_cartesian(ylim = c(0, 500)) +
cowplot::theme_cowplot()
#data store logNormalized values of counts
ggplot_lyz_normalised <- ggplot(FetchData(seurat_after_qc, vars = "LYZ", slot = "data"), aes(LYZ)) +
geom_histogram(fill = "grey", color = "black", bins = 100) +
coord_cartesian(ylim = c(0, 500)) +
cowplot::theme_cowplot()
cowplot::plot_grid(ggplot_lyz_raw, ggplot_lyz_normalised, ncol = 1)
seurat_after_qc <- FindVariableFeatures(seurat_after_qc, nfeatures = 2000)
seurat_after_qc@assays$RNA@var.features[1:20]
VariableFeatures(seurat_after_qc)[1:10]
top10 <- head(VariableFeatures(seurat_after_qc), 10)
VariableFeaturePlot(seurat_after_qc )
LabelPoints(plot = VariableFeaturePlot(seurat_after_qc), points = top10, repel = TRUE, xnudge = 0, ynudge = 0)
?ScaleData
seurat_after_qc <- ScaleData(seurat_after_qc,
vars.to.regress = c("nCount_RNA", "percent_mt")
)
seurat_after_qc <- RunPCA(seurat_after_qc)
Reductions(seurat_after_qc)
PCAPlot(seurat_after_qc, dims = c(1,2))
DimPlot(seurat_after_qc)
# Use this code chunk to prepare a data.frame for ggplot2
?FetchData
pca_data <- FetchData(seurat_after_qc, vars = c("PC_1", "PC_2")  )
head(pca_data)
ggplot(pca_data, aes(PC_1, PC_2))+
geom_point()
ElbowPlot(seurat_after_qc)
seurat_after_qc <- ScaleData(seurat_after_qc,
vars.to.regress = c("nCount_RNA", "percent_mt")
seurat_after_qc <- RunPCA(seurat_after_qc)
seurat_after_qc <- RunPCA(seurat_after_qc)
Reductions(seurat_after_qc)
PCAPlot(seurat_after_qc, dims = c(1,2))
pca_data <- FetchData(seurat_after_qc, vars = c("PC_1", "PC_2")  )
head(pca_data)
ggplot(pca_data, aes(PC_1, PC_2))+
geom_point()
ElbowPlot(seurat_after_qc)
ElbowPlot(seurat_after_qc, ndims = 1:200)
ElbowPlot(seurat_after_qc, ndims = 1:100)
ElbowPlot(seurat_after_qc, ndims = 1:200)
ElbowPlot(seurat_after_qc, dims = 1:200)
ElbowPlot(seurat_after_qc, ndims = 200)
seurat_after_qc_pc1 <- RunUMAP(seurat_after_qc, dims = 1:)
seurat_after_qc_pc1 <- RunUMAP(seurat_after_qc, dims = 1:10)
UMAPPlot(seurat_after_qc_pc1)
seurat_after_qc <- FindNeighbors(seurat_after_qc_pc1, dims = 1:10)
Graphs(seurat_after_qc_pc1)
seurat_after_qc <- FindNeighbors(seurat_after_qc_pc1, dims = 1:10)
Graphs(seurat_after_qc_pc1)
seurat_after_qc_pc1 <- RunUMAP(seurat_after_qc, dims = 1:20)
UMAPPlot(seurat_after_qc_pc1)
seurat_after_qc <- FindNeighbors(seurat_after_qc_pc1, dims = 1:20)
Graphs(seurat_after_qc_pc1)
?FindClusters
seurat_after_qc_cluster1 <- FindClusters(seurat_after_qc_pc1, resolution = 0.5)
UMAPPlot(seurat_after_qc)
UMAPPlot(seurat_after_qc_cluster1)
seurat_after_qc_cluster1 <- FindClusters(seurat_after_qc_pc1, resolution = 0.8)
UMAPPlot(seurat_after_qc_cluster1)
seurat_after_qc_cluster1 <- FindClusters(seurat_after_qc_pc1, resolution = 0.3)
UMAPPlot(seurat_after_qc_cluster1)
seurat_after_qc_cluster1 <- FindClusters(seurat_after_qc_pc1, resolution = 0.2)
UMAPPlot(seurat_after_qc_cluster1)
seurat_markers_all <- FindAllMarkers(seurat_after_qc_cluster1,
only.pos = TRUE,
min.pct = 0.25,
logfc.threshold = 0.25
)
class(seurat_markers_all)
head(seurat_markers_all)
subset(seurat_markers_all, cluster == 3)[1:10, ]
View(seurat_markers_all)
FeaturePlot(
seurat_after_qc_cluster1,
features = subset(seurat_markers_all, cluster == 3)[1:4, "gene"]
)
VlnPlot(seurat_after_qc_cluster1,
features = subset(seurat_markers_all, cluster == 3)[1:4, "gene"]
)
markers_top10_clusters <- seurat_markers_all %>% group_by(cluster) %>%
top_n(n = 10, wt = avg_log2FC)
DoHeatmap(
seurat_after_qc,
features = markers_top10_clusters$gene
)
DoHeatmap(
seurat_after_qc_cluster1,
features = markers_top10_clusters$gene
)
resoultion02 <- DoHeatmap(
seurat_after_qc_cluster1,
features = markers_top10_clusters$gene
)
seurat_after_qc_cluster1 <- FindClusters(seurat_after_qc_pc1, resolution = 0.5)
UMAPPlot(seurat_after_qc_cluster1)
seurat_markers_all <- FindAllMarkers(seurat_after_qc_cluster1,
only.pos = TRUE,
min.pct = 0.25,
logfc.threshold = 0.25
)
class(seurat_markers_all)
head(seurat_markers_all)
DimPlot(seurat_after_qc_cluster1, label = TRUE)
head(seurat_markers_all)
subset(seurat_markers_all, cluster == 3)[1:10, ]
FeaturePlot(
seurat_after_qc_cluster1,
features = subset(seurat_markers_all, "RPL32"
)
)
head(subset(seurat_markers_all, cluster == 3))
subset(seurat_markers_all, cluster == 3)[1:10, ]
FeaturePlot(
seurat_after_qc_cluster1,
features = subset(seurat_markers_all, cluster == 3)[1:4, "gene"]
)
FeaturePlot(seurat_after_qc_cluster1, features = c("RPL32", "GNLY", "CD3E", "CD14", "FCER1A", "FCGR3A", "LYZ", "PPBP",
"CD8A"))
?FindClusters
?FindNeighbors
clustree(seurat_after_qc, prefix = "RNA_snn_res.")
library(clustree)
clustree(seurat_after_qc, prefix = "RNA_snn_res.")
clustree(seurat_after_qc_pc1, prefix = "RNA_snn_res.")
seurat_after_qc <- RunUMAP(seurat_after_qc, dims = 1:20)
UMAPPlot(seurat_after_qc)
library(clustree)
clustree(seurat_after_qc, prefix = "RNA_snn_res.")
seurat_after_qc <- FindNeighbors(seurat_after_qc_pc1, dims = 1:20,
k.param = 20.
)
clustree(seurat_after_qc, prefix = "RNA_snn_res.")
Graphs(seurat_after_qc_pc1)
clustree(seurat_after_qc_cluster1, prefix = "RNA_snn_res.")
seurat_after_qc <- FindClusters(seurat_after_qc, resolution = 0.5)
seurat_after_qc <- FindClusters(seurat_after_qc, resolution = 0.2)
clustree(seurat_after_qc_cluster1, prefix = "RNA_snn_res.")
DimPlot(seurat_after_qc, label = TRUE)
seurat_markers_all <- FindAllMarkers(seurat_after_qc,
only.pos = TRUE,
min.pct = 0.25,
logfc.threshold = 0.25
)
class(seurat_markers_all)
clustree(seurat_after_qc_cluster1, prefix = "RNA_snn_res.")
clustree(seurat_after_qc, prefix = "RNA_snn_res.")
?clustree
clustree(seurat_after_qc_cluster1, prefix = "RNA_snn_res.")
head(seurat_markers_all)
resoultion02
DoHeatmap(
seurat_after_qc,
features = markers_top10_clusters$gene
)
markers_top10_clusters <- seurat_markers_all %>% group_by(cluster) %>%
top_n(n = 10, wt = avg_log2FC)
DoHeatmap(
seurat_after_qc,
features = markers_top10_clusters$gene
)
seurat_markers_all <- FindAllMarkers(seurat_after_qc,
only.pos = TRUE,
min.pct = 0.25,
logfc.threshold = 0.5
)
class(seurat_markers_all)
head(seurat_markers_all)
subset(seurat_markers_all, cluster == 3)[1:10, ]
FeaturePlot(
seurat_after_qc_cluster1,
features = subset(seurat_markers_all, cluster == 3)[1:4, "gene"]
)
VlnPlot(seurat_after_qc_cluster1,
features = subset(seurat_markers_all, cluster == 3)[1:4, "gene"]
)
markers_top10_clusters <- seurat_markers_all %>% group_by(cluster) %>%
top_n(n = 10, wt = avg_log2FC)
DoHeatmap(
seurat_after_qc,
features = markers_top10_clusters$gene
)
?FindAllMarkers
FeaturePlot(
seurat_after_qc,
features = subset(seurat_markers_all, cluster == 3)[1:4, "gene"]
)
FeaturePlot(seurat_after_qc, features = c("RPL32", "GNLY", "CD3E", "CD14", "FCER1A", "FCGR3A", "LYZ", "PPBP",
"CD8A"))
FeaturePlot(seurat_after_qc, features = c("RPL32", "GNLY"))
?subset
subset(seurat_markers_all, indents == 3)[1:10, ]
seurat_markers_all
subset(seurat_markers_all, cluster == 3)[1:10, ]
arrange(subset(seurat_markers_all, cluster == 3)(desc(abs(avg_log2FC))))
?arrange
x <- subset(seurat_markers_all, cluster == 3)[1:10, ]
arrange(x(desc(abs(avg_log2FC))))
arrange((desc(abs(x(avg_log2FC)))))
arrange((desc(abs(avg_log2FC))))
arrange((desc(abs(x(avg_log2FC))))
)
x %>% arrange(desc(abs(avg_log2FC)))
x %>% arrange(desc(abs(avg_log2FC)))
x %>% arrange(desc((avg_log2FC)))
x %>% arrange(desc(abs(avg_log2FC)))
x <- subset(seurat_markers_all, cluster == 3)
arrange((desc(abs(avg_log2FC))))
x %>% arrange(desc(abs(avg_log2FC)))
x %>% arrange(desc((avg_log2FC)))
x %>% arrange(desc(abs(avg_log2FC)))
FeaturePlot(
seurat_after_qc,
features = subset(seurat_markers_all, cluster == 3)[1:4, "gene"]
)
y <- x %>% arrange(desc(abs(avg_log2FC)))
y <- x %>% arrange(desc(abs(avg_log2FC)))
y
FeaturePlot(seurat_after_qc, features = c("RPL32", "GNLY"))
DimPlot(seurat_after_qc)
FeaturePlot(
seurat_after_qc,
features = subset(seurat_markers_all, cluster == 3)[1:4, "gene"]
)
