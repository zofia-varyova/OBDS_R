knitr::opts_chunk$set(echo = TRUE)
## ggplot2
dec$hvg <- row.names(dec) %in% hvg
sce_umap <-  reducedDim(sce, type = "UMAP") %>%
as.data.frame() %>%
bind_cols(colData(sce) %>% as_tibble()) %>%
ggplot() +
geom_point(aes(V1, V2, color= detected)) +
cowplot::theme_cowplot()
knitr::opts_chunk$set(echo = TRUE)
library(DropletUtils )
library(DropletUtils)
sce <- DropletUtils::read10xCounts(
samples = c("pbmc5k" = "/project/obds/shared/resources/4_r_single_cell/singlecell_droplets/filtered_feature_bc_matrix"))
sce
metadata(sce)
colData(sce)
is.mito <- grep("^MT-", rowData(sce)$Symbol,
value = FALSE) #looks for ensembl not for gene id
library(scuttle)
sce <- scuttle::addPerCellQC(sce,
subset = list(MT = is.mito) )
rowData(sce)
colData(sce) # this is where MT metrics are specified for some overall QC metrics
library(tidyverse)
plot1 <- colData(sce) %>%
as_tibble() %>%
ggplot() +
geom_violin(aes( x = Sample, y =sum  )) +
labs(x = "Total UMI", y = "Value")
plot2 <- colData(sce) %>%
as_tibble() %>%
ggplot( y = ) +
geom_violin(aes( x = Sample, y = detected   )) +
labs(x = "Genes detected", y = "Value")
plot3 <- colData(sce) %>%
as_tibble() %>%
ggplot() +
geom_violin(aes(x = Sample, y = subsets_MT_percent  )) +
labs(x = "Percentage mitochondrial", y = "Value")
cowplot::plot_grid(plot1, plot2, plot3, nrow = 1)
sce <- sce[  , sce$sum > 4500 & sce$subsets_MT_percent < 15 & sce$detected > 1500 ]
rowData(sce)
colData(sce)
sce <- scuttle::addPerFeatureQC(sce)
rowData(sce)
## ggplot2
rowData(sce) %>%
as_tibble() %>%
ggplot() +
geom_point(aes(detected / 100 * ncol(sce), log10(mean)))
library(scuttle)
sce <- scuttle::logNormCounts(sce)
assayNames(sce)
library(DelayedMatrixStats)
#
x <- DelayedArray(assay(sce, "counts"))
str(x)
plot_data <- tibble(
mean = DelayedMatrixStats::rowMeans2(x),
variance = DelayedMatrixStats::rowVars(x)
)
dim(plot_data)
plot_counts <- ggplot(plot_data, aes(mean, variance)) +
geom_point()
####################
x <- DelayedArray(assay(sce, "logcounts"))
plot_data <- tibble(
mean = DelayedMatrixStats::rowMeans2(x),
variance = DelayedMatrixStats::rowVars(x)
)
plot_logcounts <- ggplot(plot_data, aes(mean, variance)) +
geom_point()
cowplot::plot_grid(plot_counts, plot_logcounts, nrow = 1)
library(scran)
assayNames(sce)
dec <- scran::modelGeneVar(sce)
dec
ggplot(as_tibble(dec)) +
geom_point(aes(mean, total), color = "black") +
geom_point(aes(mean, bio), color = "blue") +
geom_point(aes(mean, tech), color = "red")
hvg <- scran::getTopHVGs(dec,
n = 200)
length(hvg)
## ggplot2
dec$hvg <- row.names(dec) %in% hvg
head(dec)
ggplot(as_tibble(dec)) +
geom_point( aes(mean, bio, color = hvg) )
set.seed(1234)
sce <- scater::runPCA(sce, subset_row=hvg)
sce
reducedDimNames(sce)
sce <- scater::runUMAP(sce, dimred = 'PCA', external_neighbors=TRUE)
sce <- scater::runTSNE(sce, dimred = 'PCA', external_neighbors=TRUE)
reducedDimNames(sce)
?
umap_data <- as.data.frame(reducedDim(sce, "UMAP"))
head(umap_data)
sce_umap <- ggplot(umap_data)+
geom_point(aes(V1, V2, color = detected))
sce_umap
umap_data <- as.data.frame(reducedDim(sce, "UMAP"))
head(umap_data)
sce_umap <- ggplot(umap_data)+
geom_point(aes(V1, V2, color = detected)
sce_umap
umap_data <- as.data.frame(reducedDim(sce, "UMAP"))
head(umap_data)
umap_data <- as.data.frame(reducedDim(sce, "UMAP"))
head(umap_data)
sce_umap <- ggplot(umap_data, aes(V1, V2, color = detected)+
geom_point()
sce_umap
sce_umap <- ggplot(umap_data, aes(V1, V2, color = detected)+
geom_point()
)
sce_umap <- ggplot(sce, aes(V1, V2, color = detected)+
geom_point()
sce_umap
umap_data <- as.data.frame(reducedDim(sce, "UMAP"))
head(umap_data)
sce_umap <- ggplot(umap_data, aes(V1, V2, color = detected)+
geom_point()
sce_umap <- ggplot(umap_data, aes(V1, V2, color = detected))+
sce_umap <- ggplot(umap_data, aes(V1, V2, color = detected) +
geom_point()
sce_umap <- ggplot(umap_data, aes(V1, V2, color = detected)) +
sce_umap <- ggplot(umap_data, aes(V1, V2, color = detected)) +
geom_point()
sce_umap
sce_umap <- ggplot(umap_data, aes(V1, V2, color = sce$detected)) +
geom_point()
sce_umap
umap_data$detected <- sce$detected
sce_umap <- ggplot(umap_data, aes(V1, V2, color = detected)) +
geom_point()
sce_umap
output <- scran::getClusteredPCs(reducedDim(sce, "PCA"))
output
View(output)
metadata(output)$chosen
g <-    scran:buildSNNGraph(sce, use.dimred = "PCA")
g <-    scran::buildSNNGraph(sce, use.dimred = "PCA")
View(g)
colData(sce)[["label"]] <- factor(igraph::cluster_louvain(g)$membership)
gg_snn <- reducedDim(x = sce, type = "UMAP") %>%
as.data.frame() %>%
as_tibble() %>%
bind_cols(colData(sce) %>% as_tibble()) %>%
sample_frac() %>%
ggplot() +
geom_point(aes(V1, V2, color=label)) +
cowplot::theme_cowplot()
gg_snn
g <-    scran::buildSNNGraph(reducedDim(sce, "PCA")[1:7])
colData(sce)[["label"]] <- factor(igraph::cluster_louvain(g)$membership)
gg_snn <- reducedDim(x = sce, type = "UMAP") %>%
as.data.frame() %>%
as_tibble() %>%
bind_cols(colData(sce) %>% as_tibble()) %>%
sample_frac() %>%
ggplot() +
geom_point(aes(V1, V2, color=label)) +
cowplot::theme_cowplot()
gg_snn
g <-    scran::buildSNNGraph(reducedDim(sce, "PCA")[,1:7])
colData(sce)[["label"]] <- factor(igraph::cluster_louvain(g)$membership)
g <-    scran::buildSNNGraph(reducedDim(sce, "PCA")[,1:41])
?buildSNNGraph
g <-    scran::buildSNNGraph(reducedDim(sce, "PCA")[,1:41], d=7)
colData(sce)[["label"]] <- factor(igraph::cluster_louvain(g)$membership)
g <-    scran::buildSNNGraph(reducedDim(sce, "PCA")[,1:41])
colData(sce)[["label"]] <- factor(igraph::cluster_louvain(g)$membership)
g <-    scran::buildSNNGraph(reducedDim(sce, "PCA")
colData(sce)[["label"]] <- factor(igraph::cluster_louvain(g)$membership)
g <-    scran::buildSNNGraph(sce, use.dimred = "PCA")
colData(sce)[["label"]] <- factor(igraph::cluster_louvain(g)$membership)
gg_snn <- reducedDim(x = sce, type = "UMAP") %>%
as.data.frame() %>%
as_tibble() %>%
bind_cols(colData(sce) %>% as_tibble()) %>%
sample_frac() %>%
ggplot() +
geom_point(aes(V1, V2, color=label)) +
cowplot::theme_cowplot()
gg_snn
snn_plots <- list()
for (d in c(5, 10, 13, 15)) {
g <- scran::buildSNNGraph(t(reducedDim(sce, "PCA")), d = d)
colData(sce)[[sprintf("snn_d", d)]] <- factor(igraph::cluster_louvain(g)$membership)
gg_d <- reducedDim(x = sce, type = "UMAP") %>%
as.data.frame() %>%
as_tibble() %>%
bind_cols(colData(sce) %>% as_tibble()) %>%
sample_frac() %>%
ggplot() +
geom_point(aes(V1, V2, color=snn_d)) +
labs(title = d) +
cowplot::theme_cowplot()
snn_plots[[as.character(d)]] <- gg_d
}
plot_grid(plotlist = snn_plots, ncol = 2)
for (d in c(5, 10, 13, 15)) {
g <- scran::buildSNNGraph(t(reducedDim(sce, "PCA")), d = d)
colData(sce)[[sprintf("snn_d", d)]] <- factor(igraph::cluster_louvain(g)$membership)
gg_d <- reducedDim(x = sce, type = "UMAP") %>%
as.data.frame() %>%
as_tibble() %>%
bind_cols(colData(sce) %>% as_tibble()) %>%
sample_frac() %>%
ggplot() +
geom_point(aes(V1, V2, color=snn_d)) +
labs(title = d) +
cowplot::theme_cowplot()
snn_plots[[as.character(d)]] <- gg_d
}
plot_grid(plotlist = snn_plots, ncol = 2)
for (d in c(5, 10, 13, 15)) {
g <- scran::buildSNNGraph(t(reducedDim(sce, "PCA")), d = 7)
colData(sce)[[sprintf("snn_d", d)]] <- factor(igraph::cluster_louvain(g)$membership)
gg_d <- reducedDim(x = sce, type = "UMAP") %>%
as.data.frame() %>%
as_tibble() %>%
bind_cols(colData(sce) %>% as_tibble()) %>%
sample_frac() %>%
ggplot() +
geom_point(aes(V1, V2, color=snn_d)) +
labs(title = d) +
cowplot::theme_cowplot()
snn_plots[[as.character(d)]] <- gg_d
}
plot_grid(plotlist = snn_plots, ncol = 2)
sce$quickCluster <- scran::quickCluster(sce)
gg_cluster <- reducedDim(x = sce, type = "UMAP") %>%
as.data.frame() %>%
as_tibble() %>%
bind_cols(colData(sce) %>% as_tibble()) %>%
sample_frac() %>%
ggplot() +
geom_point(aes(V1, V2, color=quickCluster)) +
cowplot::theme_cowplot()
gg_cluster
snn_plots <- list(1, 2, 5, 20)
for (d in c(5, 10, 13, 15)) {
g <- scran::buildSNNGraph(t(reducedDim(sce, "PCA")), d = 7)
colData(sce)[[sprintf("snn_d", d)]] <- factor(igraph::cluster_louvain(g)$membership)
gg_d <- reducedDim(x = sce, type = "UMAP") %>%
as.data.frame() %>%
as_tibble() %>%
bind_cols(colData(sce) %>% as_tibble()) %>%
sample_frac() %>%
ggplot() +
geom_point(aes(V1, V2, color=snn_d)) +
labs(title = d) +
cowplot::theme_cowplot()
snn_plots[[as.character(d)]] <- gg_d
}
plot_grid(plotlist = snn_plots, ncol = 2)
snn_plots <- list(1, 2, 5, 20)
for (d in c(5, 10, 13, 15)) {
g <- scran::buildSNNGraph(t(reducedDim(sce, "PCA")), d = d)
colData(sce)[[sprintf("snn_d", d)]] <- factor(igraph::cluster_louvain(g)$membership)
gg_d <- reducedDim(x = sce, type = "UMAP") %>%
as.data.frame() %>%
as_tibble() %>%
bind_cols(colData(sce) %>% as_tibble()) %>%
sample_frac() %>%
ggplot() +
geom_point(aes(V1, V2, color=snn_d)) +
labs(title = d) +
cowplot::theme_cowplot()
snn_plots[[as.character(d)]] <- gg_d
}
plot_grid(plotlist = snn_plots, ncol = 2)
snn_plots <- list()
for (d in c(5, 10, 13, 15)) {
g <- scran::buildSNNGraph(t(reducedDim(sce, "PCA")), d = d)
colData(sce)[[sprintf("snn_d", d)]] <- factor(igraph::cluster_louvain(g)$membership)
gg_d <- reducedDim(x = sce, type = "UMAP") %>%
as.data.frame() %>%
as_tibble() %>%
bind_cols(colData(sce) %>% as_tibble()) %>%
sample_frac() %>%
ggplot() +
geom_point(aes(V1, V2, color=snn_d)) +
labs(title = d) +
cowplot::theme_cowplot()
snn_plots[[as.character(d)]] <- gg_d
}
plot_grid(plotlist = snn_plots, ncol = 2)
g <- scran::buildSNNGraph(t(reducedDim(sce, "PCA")), d = 13)
colData(sce)[["label"]] <- factor(igraph::cluster_louvain(g)$membership)
gg_snn <- reducedDim(x = sce, type = "UMAP") %>%
as.data.frame() %>%
as_tibble() %>%
bind_cols(colData(sce) %>% as_tibble()) %>%
sample_frac() %>%
ggplot() +
geom_point(aes(V1, V2, color=label)) +
cowplot::theme_cowplot()
gg_snn
g <- scran::buildSNNGraph(t(reducedDim(sce, "PCA")), d = 41)
colData(sce)[["label"]] <- factor(igraph::cluster_louvain(g)$membership)
gg_snn <- reducedDim(x = sce, type = "UMAP") %>%
as.data.frame() %>%
as_tibble() %>%
bind_cols(colData(sce) %>% as_tibble()) %>%
sample_frac() %>%
ggplot() +
geom_point(aes(V1, V2, color=label)) +
cowplot::theme_cowplot()
gg_snn
snn_plots <- list()
for (d in c(5, 10, 13, 15)) {
g <- scran::buildSNNGraph(t(reducedDim(sce, "PCA")), d = d)
colData(sce)[[sprintf("snn_d", d)]] <- factor(igraph::cluster_louvain(g)$membership)
gg_d <- reducedDim(x = sce, type = "UMAP") %>%
as.data.frame() %>%
as_tibble() %>%
bind_cols(colData(sce) %>% as_tibble()) %>%
sample_frac() %>%
ggplot() +
geom_point(aes(V1, V2, color=snn_d)) +
labs(title = d) +
cowplot::theme_cowplot()
snn_plots[[as.character(d)]] <- gg_d
}
plot_grid(plotlist = snn_plots, ncol = 2)
snn_plots <- list()
for (d in c(5, 10, 13, 15)) {
g <- scran::buildSNNGraph(t(reducedDim(sce, "PCA")), d = d)
colData(sce)[[sprintf("snn_d", d)]] <- factor(igraph::cluster_louvain(g)$membership)
gg_d <- reducedDim(x = sce, type = "UMAP") %>%
as.data.frame() %>%
as_tibble() %>%
bind_cols(colData(sce) %>% as_tibble()) %>%
sample_frac() %>%
ggplot() +
geom_point(aes(V1, V2, color=snn_d), size = 0.2) +
labs(title = d) +
cowplot::theme_cowplot()
snn_plots[[as.character(d)]] <- gg_d
}
plot_grid(plotlist = snn_plots, ncol = 2)
markers <- scran::findMarkers(sce, sce$label, direction = "up")
markers <- scran::findMarkers(sce, sce$label, direction = "up")
rowData(sce
)
head(markers)
rowData(sce)[rownames(markers[[1]]),] %>%
as.data.frame() %>%
head()
marker_id <- rownames(markers$`1`)[1]
marker_id <- "ENSG00000271503"
marker_name <- rowData(sce)[marker_id, "Symbol"]
colData(sce) %>%
as_tibble() %>%
mutate(marker = assay(sce, "logcounts")[marker_id, ]) %>%
ggplot(aes(label, marker)) +
geom_violin(aes(fill = label)) +
geom_point() +
labs(title = marker_id, subtitle = marker_name) +
scale_color_viridis_c()
rowData(sce)[rownames(markers[[1]]),]
rowData(sce)[rownames(markers[[1]]),] %>%
as.data.frame() %>%
head()
head(markers)
View(markers)
View(sce)
?findMarkers
markers <- scran::findMarkers(sce,
groups = sce$label,
direction = "up",
test.type = "wilcox")
head(markers)
SimpleList(markers)
SimpleList(markers)
class(markers)
markers[2]
markers[[2]]
markers <- scran::findMarkers(sce,
groups = sce$label,
direction = "up",
test.type = "t")
head(markers)
class(markers)
markers[[2]]
