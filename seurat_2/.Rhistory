knitr::opts_chunk$set(echo = TRUE)
library(Seurat)
library(tidyverse)
library(patchwork)
library(DT)
library(gprofiler2)
seurat_after_qc <- SCTransform(seurat_after_qc,
assay = "RNA",
variable.features.n = 2000
vars.to.regress = "percent_mt")
seurat_after_qc <-readRDS("/project/obds/shared/resources/4_r_single_cell/singlecell_seuratday2/seurat_after_qc.rds")
DefaultAssay(seurat_after_qc)
seurat_after_qc <- SCTransform(seurat_after_qc,
assay = "RNA",
variable.features.n = 2000
vars.to.regress = "percent_mt")
seurat_after_qc <- SCTransform(seurat_after_qc,
assay = "RNA",
variable.features.n = 2000,
vars.to.regress = "percent_mt")
seurat_after_qc
seurat_after_qc[[]]
?VlnPlot
VlnPlot(seurat_after_qc, features = c("nCount_RNA", "nCount_SCT", "nFeature_RNA", "nFeature_SCT")
VlnPlot(seurat_after_qc, features = c("nCount_RNA", "nCount_SCT", "nFeature_RNA", "nFeature_SCT"))
VlnPlot(seurat_after_qc, features = c("nCount_RNA", "nCount_SCT", "nFeature_RNA", "nFeature_SCT"))
VlnPlot(seurat_after_qc, features = c("nCount_RNA", "nCount_SCT", "nFeature_RNA", "nFeature_SCT"), ncol = 2)
VlnPlot(seurat_after_qc, features = c("nCount_RNA", "nCount_SCT", "nFeature_RNA", "nFeature_SCT"), ncol = 2, group.by = orig.ident)
VlnPlot(seurat_after_qc, features = c("nCount_RNA", "nCount_SCT", "nFeature_RNA", "nFeature_SCT"), ncol = 2, group.by = "orig.ident")
VlnPlot(seurat_after_qc, features = c("nCount_RNA", "nCount_SCT", "nFeature_RNA", "nFeature_SCT"), ncol = 2, group.by = "orig.ident")
VlnPlot(seurat_after_qc, features = c("nCount_RNA", "nCount_SCT", "nFeature_RNA", "nFeature_SCT"), ncol = 2, group.by = "orig.ident")
VlnPlot(seurat_after_qc, features = c("nCount_RNA", "nCount_SCT", "nFeature_RNA", "nFeature_SCT"),
ncol = 2,
group.by = "orig.ident",
same.y.lims = TRUE)
VlnPlot(seurat_after_qc, features = c("nCount_RNA", "nCount_SCT", "nFeature_RNA", "nFeature_SCT"),
ncol = 2,
group.by = "seurat.cluster",
same.y.lims = TRUE)
VlnPlot(seurat_after_qc, features = c("nCount_RNA", "nCount_SCT", "nFeature_RNA", "nFeature_SCT"),
ncol = 2,
group.by = "seurat_cluster",
same.y.lims = TRUE)
VlnPlot(seurat_after_qc, features = c("nCount_RNA", "nCount_SCT", "nFeature_RNA", "nFeature_SCT"),
ncol = 2,
group.by = "seurat_clusters",
same.y.lims = TRUE)
VlnPlot(seurat_after_qc, features = c("nCount_RNA", "nCount_SCT", "nFeature_RNA", "nFeature_SCT"),
ncol = 2,
group.by = "seurat_clusters",
same.y.lims = FALSE)
DefaultAssay(seurat_after_qc) <-
ggplot_lyz_raw <- ggplot(FetchData(seurat_after_qc, ), aes(LYZ)) +
geom_histogram(fill = "grey", color = "black", bins = 100) +
coord_cartesian(ylim = c(0, 500)) +
cowplot::theme_cowplot()
DefaultAssay(seurat_after_qc) <- "SCT"
ggplot_lyz_raw <- ggplot(FetchData(seurat_after_qc, vars = "LYZ", slot = "counts"), aes(LYZ)) +
geom_histogram(fill = "grey", color = "black", bins = 100) +
coord_cartesian(ylim = c(0, 500)) +
cowplot::theme_cowplot()
ggplot_lyz_normalised <- ggplot(FetchData(seurat_after_qc, vars = "LYZ", slot = "data"), aes(LYZ)) +
geom_histogram(fill = "grey", color = "black", bins = 100) +
coord_cartesian(ylim = c(0, 500)) +
cowplot::theme_cowplot()
ggplot_lyz_scaled <- ggplot(FetchData(seurat_after_qc, vars = "LYZ", slot = "scale.data"), aes(LYZ)) +
geom_histogram(fill = "grey", color = "black", bins = 100) +
coord_cartesian(ylim = c(0, 500)) +
cowplot::theme_cowplot()
cowplot::plot_grid(ggplot_lyz_raw, ggplot_lyz_normalised,ggplot_lyz_scaled, ncol = 1)
DefaultAssay(seurat_after_qc)
DefaultAssay(seurat_after_qc) <- "SCT"
?RunPCA
seurat_after_qc <- RunPCA(seurat_after_qc,
reduction.name = "sct.pca")
ElbowPlot(seurat_after_qc)
ElbowPlot(seurat_after_qc, ndims=100)
Reductions(seurat_after_qc)
?ElbowPlot
ElbowPlot(seurat_after_qc, ndims=100, reduction = "sct.pca")
?RunUMAP
seurat_after_qc <- RunUMAP(seurat_after_qc,
dims = 1:20,
reduction = "sct.pca")
?UMAPPlot
Reductions(seurat_after_qc)
p1 <- UMAPPlot(seurat_after_qc, reduction = "umap")  + ggtitle("RNA UMAP")
p2 <- UMAPPlot(seurat_after_qc, reduction = "sct.umap") + ggtitle("SCT UMAP")
p1 + p2
p2 <- UMAPPlot(seurat_after_qc, reduction = "sct.pca") + ggtitle("SCT UMAP")
p1 + p2
ElbowPlot(seurat_after_qc, ndims=50, reduction = "sct.pca", reduction.name - "sct.umap")
seurat_after_qc <- RunUMAP(seurat_after_qc,
dims = 1:20,
reduction = "sct.pca",
reduction.name - "sct.umap")
seurat_after_qc <- RunUMAP(seurat_after_qc,
dims = 1:20,
reduction = "sct.pca",
reduction.name = "sct.umap")
p1 <- UMAPPlot(seurat_after_qc, reduction = "umap")  + ggtitle("RNA UMAP")
p2 <- UMAPPlot(seurat_after_qc, reduction = "sct.umap") + ggtitle("SCT UMAP")
p1 + p2
seurat_after_qc <- RunUMAP(seurat_after_qc,
dims = 1:20,
reduction = "pca",
reduction.name = "umap")
p1 <- UMAPPlot(seurat_after_qc, reduction = "umap")  + ggtitle("RNA UMAP")
p2 <- UMAPPlot(seurat_after_qc, reduction = "sct.umap") + ggtitle("SCT UMAP")
p1 + p2
Reductions(seurat_after_qc)
seurat_after_qc <- RunUMAP(seurat_after_qc,
dims = 1:20,
reduction = "sct.pca",
reduction.name = "sct.umap")
p1 <- UMAPPlot(seurat_after_qc, reduction = "umap")  + ggtitle("RNA UMAP")
p2 <- UMAPPlot(seurat_after_qc, reduction = "sct.umap") + ggtitle("SCT UMAP")
p1 + p2
seurat_after_qc <- RunPCA(seurat_after_qc,
reduction.name = "sct.pca")
Reductions(seurat_after_qc)
seurat_after_qc <- RunUMAP(seurat_after_qc,
dims = 1:20,
reduction = "sct.pca",
reduction.name = "sct.umap")
Reductions(seurat_after_qc)
p1 <- UMAPPlot(seurat_after_qc, reduction = "umap")  + ggtitle("RNA UMAP")
p2 <- UMAPPlot(seurat_after_qc, reduction = "sct.umap") + ggtitle("SCT UMAP")
p1 + p2
knitr::opts_chunk$set(echo = TRUE)
library(Seurat)
library(tidyverse)
library(patchwork)
library(DT)
library(gprofiler2)
seurat_after_qc <-readRDS("/project/obds/shared/resources/4_r_single_cell/singlecell_seuratday2/seurat_after_qc.rds")
DefaultAssay(seurat_after_qc)
seurat_after_qc <- SCTransform(seurat_after_qc,
assay = "RNA",
variable.features.n = 2000,
vars.to.regress = "percent_mt")
seurat_after_qc
seurat_after_qc[[]]
VlnPlot(seurat_after_qc, features = c("nCount_RNA", "nCount_SCT", "nFeature_RNA", "nFeature_SCT"),
ncol = 2,
group.by = "seurat_clusters",
same.y.lims = FALSE)
DefaultAssay(seurat_after_qc) <- "SCT"
ggplot_lyz_raw <- ggplot(FetchData(seurat_after_qc, vars = "LYZ", slot = "counts"), aes(LYZ)) +
geom_histogram(fill = "grey", color = "black", bins = 100) +
coord_cartesian(ylim = c(0, 500)) +
cowplot::theme_cowplot()
ggplot_lyz_normalised <- ggplot(FetchData(seurat_after_qc, vars = "LYZ", slot = "data"), aes(LYZ)) +
geom_histogram(fill = "grey", color = "black", bins = 100) +
coord_cartesian(ylim = c(0, 500)) +
cowplot::theme_cowplot()
ggplot_lyz_scaled <- ggplot(FetchData(seurat_after_qc, vars = "LYZ", slot = "scale.data"), aes(LYZ)) +
geom_histogram(fill = "grey", color = "black", bins = 100) +
coord_cartesian(ylim = c(0, 500)) +
cowplot::theme_cowplot()
cowplot::plot_grid(ggplot_lyz_raw, ggplot_lyz_normalised,ggplot_lyz_scaled, ncol = 1)
DefaultAssay(seurat_after_qc) <- "SCT"
seurat_after_qc <- RunPCA(seurat_after_qc,
reduction.name = "sct.pca")
Reductions(seurat_after_qc)
ElbowPlot(seurat_after_qc, ndims=50, reduction = "sct.pca")
seurat_after_qc <- RunUMAP(seurat_after_qc,
dims = 1:20,
reduction = "sct.pca",
reduction.name = "sct.umap")
Reductions(seurat_after_qc)
p2 <- UMAPPlot(seurat_after_qc, reduction = "sct.umap") + ggtitle("SCT UMAP")
p2
p1 <- UMAPPlot(seurat_after_qc, reduction = "umap")  + ggtitle("RNA UMAP")
p2 <- UMAPPlot(seurat_after_qc, reduction = "sct.umap") + ggtitle("SCT UMAP")
p1 + p2
seurat_after_qc
identical(seurat_after_qc@reductions$umap, seurat_after_qc@reductions$sct.umap)
seurat_after_qc@reductions$umap[1, ]
head(seurat_after_qc@reductions$umap$UMAP_1)
head(seurat_after_qc@reductions$umap[, 1])
head(seurat_after_qc@reductions$umap)
seurat_after_qc@reductions$umap$UMAP_1
seurat_after_qc@reductions$umap$UMAP_1
seurat_after_qc@reductions$umap
head(seurat_after_qc@reductions$umap@cell.embeddings)
head(seurat_after_qc@reductions$sct.umap@cell.embeddings)
p1 <- DimPlot(seurat_after_qc, reduction = "umap")  + ggtitle("RNA UMAP")
p2 <- DimPlot(seurat_after_qc, reduction = "sct.umap") + ggtitle("SCT UMAP")
p1 + p2
seurat_after_qc <-  FindNeighbors(seurat_after_qc, reduction = "sct.pca", dims = 1:20, assay = "SCT")
Graphs(seurat_after_qc)
seurat_after_qc <- FindClusters(seurat_after_qc, resolution = 0.5, graph.name = "sct.snn" )
Graphs(seurat_after_qc)
seurat_after_qc <- FindClusters(seurat_after_qc, resolution = 0.5, graph.name = "SCT_snn" )
table(seurat_after_qc$RNA_snn_res.0.5, seurat_after_qc$SCT_snn_res.0.5)
seurat_after_qc[[]]
p2 <- DimPlot(seurat_after_qc,reduction = "sct.umap", group.by = SCT_snn_res.0.5) + ggtitle("SCT UMAP")
seurat_after_qc[[]]
p2 <- DimPlot(seurat_after_qc,reduction = "sct.umap", group.by = "SCT_snn_res.0.5") + ggtitle("SCT UMAP")
p1 + p2
FeaturePlot(seurat_after_qc, features = c("LYZ","FCGR3A","CD4","CD8A","GNLY","MS4A1","CST3","PPBP"), reduction = "sct.umap")
FeaturePlot(seurat_after_qc, features = c("LYZ","FCGR3A","CD4","CD8A","GNLY","MS4A1","CST3","PPBP"), reduction = "umap")
p1 <- DimPlot(seurat_after_qc, reduction = "umap", pt.size = NULL ) + ggtitle("RNA UMAP")
p2 <- DimPlot(seurat_after_qc,reduction = "sct.umap") + ggtitle("SCT UMAP")
p1 + p2
seurat_after_qc[[]]
p1 <- DimPlot(seurat_after_qc, reduction = "umap", pt.size = NULL ) + ggtitle("RNA UMAP")
p2 <- DimPlot(seurat_after_qc,reduction = "sct.umap", group.by = "SCT_snn_res.0.5") + ggtitle("SCT UMAP")
p1 + p2
seurat_after_qc[[]]
p1 <- DimPlot(seurat_after_qc, reduction = "umap", group.by = "RNA_snn_res.0.5",  pt.size = NULL ) + ggtitle("RNA UMAP")
p2 <- DimPlot(seurat_after_qc,reduction = "sct.umap", group.by = "SCT_snn_res.0.5") + ggtitle("SCT UMAP")
p1 + p2
?FindAllMarkers
Idents(seurat_after_qc) <- "SCT_snn_res.0.5"
seurat_markers_all_sct <- FindAllMarkers(seurat_after_qc, assay = "SCT")
hto12.umis <- readRDS("/project/obds/shared/resources/4_r_single_cell/singlecell_seuratday2/hto12_umi_mtx.rds")
hto12.htos <- readRDS("/project/obds/shared/resources/4_r_single_cell/singlecell_seuratday2/hto12_hto_mtx.rds")
hto12.umis
hto12.htos <- readRDS("/project/obds/shared/resources/4_r_single_cell/singlecell_seuratday2/hto12_hto_mtx.rds")
head(hto12.htos)
head(hto12.umis)
?intersect
joint.bcs <- intersect(rownames(hto12.htos), colnames(hto12.umis))
head(joint.bcs)
dim(joint.bcs)
length(joint.bcs)
str(joint.bcs)
?subset
hto12.umis.common <- hto12.htos[ ,joint.bcs]
hto12.umis.common <- hto12.umis[ ,joint.bcs]
hto12.umis.common
dim(hto12.umis.common)
hto12_object <- CreateSeuratObject(counts = hto12.umis.common,
min.cells =3,
min.features = 200)
hto12_object <- NormalizeData(hto12_object)
hto12_object <- FindVariableFeatures(hto12_object,
selection.method = "vst")
hto12_object <- ScaleData(hto12_object,
features = VariableFeatures(hto12_object))
hto12.htos.common <- hto12.htos[colnames(hto12_object),# these are the cell objects
1:12 #these are the barcodes for cell types
]
?CreateAssayObject
class(hto12.htos.common)
hto12.htos.common <- t(
hto12.htos[colnames(hto12_object),# these are the cell objects
1:12 #these are the barcodes for cell types
]
)
class(hto12.htos.common)
head(hto12.htos.common)
dim(hto12.htos.common)
hto12_object[["HTO"]] <- CreateAssayObject(counts = hto12.htos.common,
)
hto12_object[[]]
DefaultAssay(hto12_object)
DefaultAssay(hto12_object) <-"H20"
DefaultAssay(hto12_object) <-"HTO"
hto12_object <- NormalizeData(hto12_object, assay = "HTO", normalization.method = "CLR" , margin=1)
hto12_object <- HT0Demux(hto12_object,
assay = "HT0")
hto12_object <- HT0Demux(hto12_object,
assay = "HTO")
hto12_object <- HTODemux(hto12_object,
assay = "HTO")
hto12_object[[]]
table(hto12_object$HTO_classification.global)
# with positive.quuantile = 0.99
#Doublet Negative  Singlet
#    1783      361     6389
# Change the identities of the seurat object to the relevant metadata column (because at the moment they are set for "hash.ID")
Idents(hto12_object) <- "HTO_maxID"
RidgePlot(hto12_object, assay = "HTO", features = c("HEK-A","THP1-A","K562-A","KG1-A"), ncol = 2)
DefaultAssay(hto12_object) <- "HTO"
FeatureScatter(hto12_object,feature1 = "HEK-A",feature2 = "HEK-B", group.by = "HTO_classification.global", span=F, smooth=F, shuffle=T )
FeatureScatter(hto12_object,feature1 = "HEK-A",feature2 = "HEK-B", group.by = "HTO_maxID", span=F, smooth=F, shuffle=T )
FeatureScatter(hto12_object,feature1 = "HEK-A",feature2 = "HEK-B", group.by = "HTO_secondID", span=F, smooth=F, shuffle=T )
HTOHeatmap(hto12_object, assay = "HTO")
